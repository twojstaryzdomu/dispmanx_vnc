name: Build & publish deb
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        SHORT_SHA=${GITHUB_SHA:1:8}
        DATE=`date +%Y%m%d`
        DCH_VER=0.0~git${DATE}.${SHORT_SHA}
        DEB=`grep -Po '^\S+|(?<=\().*(?=\))' debian/changelog | tr '\n' '_'`armhf.deb
        PACKAGE=${GITHUB_REPOSITORY#*/}
        PACKAGE=${PACKAGE//_/-}
        for n in DEB DCH_VER PACKAGE; do
          typeset -n v=${n}
          echo "${n}=\"${v}\""
        done >> $GITHUB_ENV
    - uses: twojstaryzdomu/arm-runner-action@master
      with:
        image_additional_mb: 512
        copy_artifact_path: ${{ env.DEB }}
        copy_artifact_dest: ${{ github.workspace }}
        shell: ksh
        debug: yes
        export_github_env: yes
        commands: |
            [ -n "${PACKAGE}" ]
            apt-get update
            apt-get install -y g++ libvncserver-dev libconfig++-dev dh-exec bzr-builddeb build-essential
            apt-get clean
            [ -f debian/changelog ] && rm debian/changelog
            git log --format='tformat:%ad:%h:%aN:%aE:%f:%-aD' --date=format:%Y%d%m | tac | while IFS=: read d s n e m t; do
              EMAIL=${e} dch ${first---create --package ${PACKAGE}} ${first:+-b} -v 0.0~git${d}.${s} "${m//-/ }"
              sed -i '1s/UNRELEASED/unstable/g;0,/\(>  \).*/s//\1'"${t}"'/g' debian/changelog
              first=''
            done
            cat debian/changelog
            for l in EGL GLESv2; do
              [ -e /opt/vc/lib/lib${l}.so ] || \
              ([ -f /opt/vc/lib/libbrcm${l}.so ] && \
                ln -s libbrcm${l}.so /opt/vc/lib/lib${l}.so)
            done
            dpkg-buildpackage -b -rfakeroot -us -uc
            mv ../${DEB} .
    - id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.DATE }}.${{ env.SHORT_SHA }}
        release_name: ${{ env.PACKAGE }}_${{ env.DATE }}.${{ env.SHORT_SHA }}
        draft: false
        prerelease: false
    - id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/${{ env.DEB }}
        asset_name: ${{ env.DEB }}
        asset_content_type: application/zip
